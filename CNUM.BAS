10 DEFINT A-Z: DIM N$(15): DIM IMG(18,15): DIM IMGT(18): R1=0: R2=0
11 GOSUB 300: KEY OFF: SCREEN 2: CLS: LOCATE 1,1,1
20 INPUT "Input Number: ",IN$: L=LEN(IN$)
30 IF IN$="" THEN GOTO 20 ELSE IF L > 16 THEN PRINT "Input too long.": GOTO 80
40 LOCATE ,,0: X=0: Y=16
50 IF L < 8 THEN S1$=IN$: GOSUB 200: GOTO 80
60 S1$=MID$(IN$,1,L-8): GOSUB 200: IF R1<>0 THEN ID=14: GOSUB 400
70 S1$=MID$(IN$,L-8+1,8): GOSUB 200
80 WHILE INPUT$(1)="": WEND : SCREEN 0: END
100 IF VAL(S2$)=0 THEN R2=0: RETURN
110 R2=1: OZ=0: L2=LEN(S2$): FOR I=L2 TO 1 STEP -1
120 D=VAL(MID$(S2$, L2+1-I, 1))
130 IF D=0 THEN OZ=1: GOTO 170
140 IF OZ<>0 THEN ID=0: GOSUB 400: OZ=0
150 ID=D: GOSUB 400
160 IF I=2 THEN ID=10:GOSUB 400 ELSE IF I=3 THEN ID=11:GOSUB 400 ELSE IF I=4 THEN ID=12:GOSUB 400
170 NEXT I: RETURN
200 L1=LEN(S1$): IF L1<=4 THEN S2$=S1$: GOSUB 100: R1=R2: RETURN
210 R1=0: S2$=MID$(S1$,1,L1-4): GOSUB 100: R1=R2
220 IF R2<>0 THEN ID=13:GOSUB 400
230 S2$=MID$(S1$,L1-4+1,4): GOSUB 100: R1=R1 OR R2
240 RETURN
300 FOR I=0 TO 14: IMG(0,I)=16: IMG(1,I)=16
310 FOR J=2 TO 17: READ V: T=0
320 POKE VARPTR(T)+1,PEEK(VARPTR(V)): POKE VARPTR(T),PEEK(VARPTR(V)+1): IMG(J,I)=T
330 NEXT J: NEXT I: RETURN
400 FOR IMGTA=0 TO 17: IMGT(IMGTA)=IMG(IMGTA,ID): NEXT IMGTA
410 PUT (X,Y),IMGT,PSET: IF X>=640 THEN X=0: Y=Y+16 ELSE X=X+16
420 RETURN
1010 DATA &H1ff0,&H100,&H7ffe,&H4102,&H9d74,&H100,&H1d70,&H280,&Hc60,&H3218,&Hc106,&Hfe0,&H40,&H280,&H100,&H80
1020 DATA &H108,&H7ffc,&H100,&H3ff8,&H0,&H7ffe,&H4002,&H9ff4,&H0,&H1ff0,&H1010,&H1010,&H1ff0,&H444,&Hfffe,&H0
1030 DATA &H28,&H24,&Hfffe,&H20,&H3fa0,&H20,&H7fe0,&H20,&H3fa0,&H2090,&H2490,&H2490,&H2492,&Ha0a,&H118a,&H6084
1040 DATA &H200,&H440,&H820,&H3ff0,&H210,&H204,&Hfffe,&H440,&Hfe0,&H1010,&H204e,&Hcfe4,&H0,&H10,&H3ff8,&H0
1050 DATA &H420,&H3e20,&H21fc,&H2424,&H3ffe,&H2024,&H25fc,&H3e20,&H2028,&H21fc,&Hff20,&H1024,&H25fe,&H7e20,&H220,&H20
1060 DATA &H1000,&H1008,&H17fc,&H2080,&H2080,&H6080,&Ha088,&H27fc,&H2108,&H2108,&H2108,&H2208,&H2208,&H2208,&H3ffe,&H2000
1070 DATA &H20,&H7c20,&H4428,&H49fc,&H4820,&H5020,&H4824,&H4bfe,&H4420,&H4524,&H4524,&H6924,&H5124,&H4124,&H41fc,&H4104
1080 DATA &H2080,&H1080,&H4088,&H20fc,&Hf80,&H1088,&H6088,&H2078,&H2104,&Hfffe,&H540,&H520,&H910,&H111c,&H6108,&H100
1090 DATA &H1044,&H13e4,&H1244,&H1254,&Hfe54,&H13d4,&H1114,&H1954,&H37f4,&Hd154,&H1154,&H1244,&H1244,&H1544,&H5894,&H2008
2000 DATA &H40,&H440,&Hfe88,&H10fc,&H1108,&H1108,&Hfe10,&H1010,&H1020,&H1020,&H1e50,&Hf050,&H4088,&H10e,&H204,&Hc00
2010 DATA &H1040,&H1040,&H10a0,&H10a0,&Hfd10,&H1208,&H15f6,&H1c00,&H3008,&Hd3fc,&H1208,&H1208,&H1208,&H1208,&H53f8,&H2208
2020 DATA &H800,&H804,&Hffe,&H1040,&H1088,&H33fc,&H5208,&H9208,&H1208,&H13f8,&H1208,&H1208,&H1208,&H1208,&H13f8,&H1208
2030 DATA &H810,&H838,&Hbc0,&H1040,&H1040,&H3040,&H5044,&H9ffe,&H1040,&H1040,&H1040,&H1040,&H1040,&H1040,&H1040,&H1040
2040 DATA &H0,&H4,&Hfffe,&H200,&H200,&H210,&H3f8,&H210,&H210,&H410,&H410,&H410,&H810,&H1010,&H20a0,&H4040
2050 DATA &H800,&H800,&Hbf8,&H1010,&H1020,&H3040,&H5080,&H9100,&H1200,&H1200,&H1400,&H1400,&H1402,&H1402,&H13fe,&H1000
